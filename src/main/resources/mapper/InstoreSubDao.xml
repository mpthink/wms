<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.think.wms.dao.InstoreSubDao">    
    
    <insert id="insertInstoreSub" parameterType="List">
    	insert into
    		wms_instore_sub
    	<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ismId != 0">ism_id,</if>
			<if test="issParentId != 0">iss_parent_id,</if>
			<if test="issPlanQuantity != 0">iss_plan_quantity,</if>
			<if test="issRealQuantity != 0">iss_real_quantity,</if>
			<if test="product.productId != 0">product_id,</if>
			<if test="productQuality != 0">product_quality,</if>
			<if test="store.storeId != 0">store_id,</if>
			<if test="issInsertOrder != 0">iss_insert_order,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="ismId != 0">#{ismId},</if>
			<if test="issParentId != 0">#{issParentId},</if>
			<if test="issPlanQuantity != 0">#{issPlanQuantity},</if>
			<if test="issRealQuantity != 0">#{issRealQuantity},</if>
			<if test="product.productId != 0">#{product.productId},</if>
			<if test="productQuality != 0">#{productQuality},</if>
			<if test="store.storeId != 0">#{store.storeId},</if>
			<if test="issInsertOrder != 0">#{issInsertOrder},</if>
		</trim>
    </insert>
    
    <insert id="insertInstoreSubList" parameterType="List">
    	insert into
    		wms_instore_sub(ism_id,iss_parent_id,iss_plan_quantity,iss_real_quantity,product_id,product_quality,store_id,iss_insert_order)
		values
		<foreach collection="list" item="item" separator=",">
			( #{item.ismId},#{item.issParentId},#{item.issPlanQuantity},#{item.issRealQuantity},
			  #{item.product.productId},#{item.productQuality},#{item.store.storeId},#{item.issInsertOrder} )
		</foreach>
    </insert>
    
	<delete id="deleteInstoreSubByIssId" parameterType="int">
		delete
			from wms_instore_sub
		where
			iss_id=#{issId}
	</delete>
	
	<delete id="deleteInstoreSubByIsmId" parameterType="int">
		delete
			from wms_instore_sub
		where
			ism_id=#{ismId}
	</delete>
	
	<delete id="deleteInstoreSubByIssParentId" parameterType="int">
		delete
			from wms_instore_sub
		<where>
			<if test="issParentId !=0">iss_parent_id=#{issParentId}</if>
		</where>
	</delete>
    
    <update id="updateInstoreSub" parameterType="InstoreSub">
    	update 
    		wms_instore_sub
    	<trim prefix="set" suffixOverrides=",">
    		<if test="ismId != 0">ism_id=#{ismId},</if>
    		<if test="issParentId != 0">iss_parent_id=#{issParentId},</if>
			<if test="issPlanQuantity != 0">iss_plan_quantity=#{issPlanQuantity},</if>
			<if test="issRealQuantity != 0">iss_real_quantity=#{issRealQuantity},</if>
			<if test="product.productId != 0">product_id=#{product.productId},</if>
			<if test="productQuality != 0">product_quality=#{productQuality},</if>
			<if test="store.storeId != 0">store_id=#{store.storeId},</if>
			<if test="issInsertOrder != 0">iss_insert_order=#{issInsertOrder},</if>
		</trim>
    	where
    		iss_id=#{issId}
    </update>
    
    <select id="queryById" resultType="InstoreSub" parameterType="int">
        select 
			
			customer.customer_id "customer.customer_id",
			customer.customer_name "customer.customer_name",
			customer.customer_company "customer.customer_company"
        from 
        	wms_instore_sub ism
        left join wms_customer customer on customer.customer_id = ism.customer_id
        where ism.ism_id = #{ismId}
        order by ism.ism_create_date
    </select>

	<select id="queryByFileds" resultType="InstoreSub" parameterType="map">
        select 
			ism.ism_id,
			ism.ism_sn,
			ism.ism_ticket_no,
			ism.ism_ticket_time,
			ism.ism_carrier,
			ism.ism_car_no,
			ism.ism_status,
			ism.ism_total,
			ism.ism_remark,
			ism.ism_creator,
			ism.ism_create_date,
			ism.ism_chargebacker,
			ism.ism_chargeback_date,
			ism.ism_confirmor,
			ism.ism_confirm_date,
			ism.ism_reviewer,
			ism.ism_review_date,
			customer.customer_id "customer.customer_id",
			customer.customer_name "customer.customer_name",
			customer.customer_company "customer.customer_company"
        from 
        	wms_instore_sub ism
        left join wms_customer customer on customer.customer_id = ism.customer_id
        <trim prefix="where " suffixOverrides="and |or ">
        	<if test="ismTicketNo != null">ism_ticket_no like CONCAT('%',#{ismTicketNo},'%') and</if>
        	<if test="ismCarrier != null">ism_carrier like CONCAT('%',#{ismCarrier},'%') and</if>
        	<if test="customerName != null">customer.customer_name like CONCAT('%',#{customerName},'%') and</if>
        	<if test="ismCreator != null">ism_creator like CONCAT('%',#{ismCreator},'%') and</if>
        	<if test="ismChargebacker != null">ism_chargebacker like CONCAT('%',#{ismTicketNo},'%') and</if>
        	<if test="ismConfirmor != null">ism_confirmor like CONCAT('%',#{ismConfirmor},'%') and</if>
        	<if test="ismreviewer != null">ism_reviewer like CONCAT('%',#{ismreviewer},'%') and</if>
        	<if test="ismStatus != null">ism_status = #{ismStatus} and</if>
        	<if test="ismCreateDateBegin != null">ism_create_date >= ismCreateDateBegin and</if>
        	<if test="ismCreateDateEnd != null">ism_create_date <![CDATA[ <= ]]> ismCreateDateEnd and</if>
        </trim>
        order by ism.ism_create_date
    </select>
    
    <select id="queryAll" resultType="InstoreSub">
        select 
			ism.ism_id,
			ism.ism_sn,
			ism.ism_ticket_no,
			ism.ism_ticket_time,
			ism.ism_carrier,
			ism.ism_car_no,
			ism.ism_status,
			ism.ism_total,
			ism.ism_remark,
			ism.ism_creator,
			ism.ism_create_date,
			ism.ism_chargebacker,
			ism.ism_chargeback_date,
			ism.ism_confirmor,
			ism.ism_confirm_date,
			ism.ism_reviewer,
			ism.ism_review_date,
			customer.customer_id "customer.customer_id",
			customer.customer_name "customer.customer_name",
			customer.customer_company "customer.customer_company"
        from 
        	wms_instore_sub ism
        left join wms_customer customer on customer.customer_id = ism.customer_id
        order by ism.ism_create_date
    </select>
</mapper>